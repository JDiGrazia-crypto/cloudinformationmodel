CREATE SCHEMA IF NOT EXISTS PARTY_ROLE_ENTITY_GROUP;

CREATE TABLE PARTY_ROLE_ENTITY_GROUP.SUPPLIER (
  SATISFACTION_ETHICS_RANK INTEGER,
  CONTRACT_INVOICE_ACCURACY_RATE INTEGER,
  SATISFACTION_WEIGHT_PERCENT INTEGER,
  CONTRACT_ON_TIME_DELIVERY_RATE INTEGER,
  ID VARCHAR(36) UNIQUE NOT NULL,
  ACTIVE_FROM_DATE DATE NOT NULL,
  ACTIVE_TO_DATE DATE,
  COMPETITIVE_WARRANTY_RANK INTEGER,
  COMPETITIVE_MARKETING_RANK INTEGER,
  CONTRACT_DELIVERY_CORRECTNESS_RATE INTEGER,
  COMPETITIVE_WEIGHT_SCORE INTEGER,
  CONTRACT_SL_AISSUE_RATE INTEGER,
  COMPETITIVE_WEIGHT_PERCENT INTEGER,
  SUPPLIER_SCORE INTEGER,
  COMPETITIVE_PRODUCT_PRICE_RANK INTEGER,
  CONTRACT_WEIGHT_PERCENT INTEGER,
  SUPPLIER_SPEND INTEGER,
  SATISFACTION_TECHNICAL_SUPPORT_RANK INTEGER,
  CONTRACT_WEIGHT_SCORE INTEGER,
  SATISFACTION_CUSTOMER_SERVICE_RANK INTEGER,
  SATISFACTION_WEIGHT_SCORE INTEGER,
  CONTRACT_SOURCING_CYCLE_DAYS INTEGER,
  SUPPLIER_TYPE VARCHAR(500),
  IS_CARRIER BOOLEAN,
  CONTRACT_PRODUCT_RETURN_RATE INTEGER,
  COMPETITIVE_COST_AVOIDANCE_RANK INTEGER,
  CONTRACT_PRODUCT_QUALITY_RATE INTEGER,
  CONTRACT_BUDGET_COST_RATE INTEGER,
  PRIMARY KEY (ID)
);

CREATE TABLE PARTY_ROLE_ENTITY_GROUP.CUSTOMER_STATUS_HISTORY (
  START_DATE_TIME TIME NOT NULL,
  PARTY_ROLE_STATUS VARCHAR(500) NOT NULL,
  ID VARCHAR(36) UNIQUE NOT NULL,
  END_DATE_TIME TIME NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE PARTY_ROLE_ENTITY_GROUP.COMPETITOR (
  COMPETITOR_STRENGTHS VARCHAR(500),
  COMPETITOR_FROM_DATE DATE NOT NULL,
  SOCIAL_MEDIA_POST_RATE INTEGER,
  COMPETITOR_THREATS VARCHAR(500),
  CURRENT_RATIO INTEGER,
  CASH_FLOW_GROWTH INTEGER,
  COMPETITOR_OBJECTIVES VARCHAR(500),
  NET_PROFIT_MARGIN INTEGER,
  ID VARCHAR(36) UNIQUE NOT NULL,
  COMPETITOR_WEAKNESSES VARCHAR(500),
  PRESS_MENTIONS_RATE INTEGER,
  ASSET_TURNOVER_RATIO INTEGER,
  COMPETITOR_TO_DATE DATE,
  COMPETITOR_LEVERAGE_OPPORTUNITIES VARCHAR(500),
  ASSET_RETURN_RATIO INTEGER,
  PTO_ENUMBER INTEGER,
  AD_KEYWORDS VARCHAR(500),
  AD_REACH_RATE INTEGER,
  PRIMARY KEY (ID)
);

CREATE TABLE PARTY_ROLE_ENTITY_GROUP.SELLER (
  COMMUNITY_PARTICIPATION_COUNT INTEGER,
  DEMONSTRATIONS_GIVEN_COUNT INTEGER,
  EVENT_PARTICIPATION_COUNT INTEGER,
  CUSTOMER_SATISFACTION_SCORE INTEGER,
  TRAINING_CERTIFICATION_COUNT INTEGER,
  OPPORTUNITY_INVOLVEMENT_COUNT INTEGER,
  MARKETING_DEVELOPMENT_AMOUNT INTEGER,
  SELLER_TYPE VARCHAR(500),
  DOCUMENTATION_DOWNLOAD_COUNT INTEGER,
  ID VARCHAR(36) UNIQUE NOT NULL,
  ACTIVE_FROM_DATE DATE NOT NULL,
  ACTIVE_TO_DATE DATE,
  TRIAL_PARTICIPATION_COUNT INTEGER,
  CREDIT_RATING INTEGER,
  SATISFACTION_SCORE INTEGER,
  SALES_AMOUNT INTEGER,
  OPPORTUNITY_WIN_RATE INTEGER,
  PRODUCT_RETURN_RATE INTEGER,
  LEAD_GENERATION_COUNT INTEGER,
  INVENTORY_VALUE_AMOUNT INTEGER,
  MAJOR_POST_SALE_SUPPORT_NEEDED BOOLEAN,
  TRAINING_PARTICIPATION_COUNT INTEGER,
  NEW_CUSTOMER_ACQUISITION_COUNT INTEGER,
  SUCCESS_STORY_COUNT INTEGER,
  SYSTEM_LOGIN_COUNT INTEGER,
  JOINT_BUSINESS_PLAN_EXIST BOOLEAN,
  AVERAGE_CONVERTED_LEAD_AMOUNT INTEGER,
  ESTIMATED_PARTNER_GROSS_MARGIN INTEGER,
  PRIMARY KEY (ID)
);

CREATE TABLE PARTY_ROLE_ENTITY_GROUP.CUSTOMER (
  CUSTOMER_STATUS VARCHAR(500) NOT NULL,
  PROSPECT_RATING VARCHAR(500),
  NET_PROMOTER_SCORE INTEGER,
  CUSTOMER_SATISFACTION_SCORE INTEGER,
  ID VARCHAR(36) UNIQUE NOT NULL,
  MARKETING_EMAIL_RESPONSE_RATE INTEGER,
  TOTAL_CONTRACTED_AMOUNT INTEGER,
  TOTAL_PROFIT_CONTRIBUTION_AMOUNT INTEGER,
  CUSTOMER_NUMBER VARCHAR(500),
  CHURN_SCORE INTEGER,
  ORIGINATING_CUSTOMER_SOURCE VARCHAR(500),
  TOTAL_LIFE_TIME_VALUE INTEGER,
  TOTAL_BOOKINGS_AMOUNT INTEGER,
  LAST24_MONTHS_NEW_REVENUE_AMOUNT INTEGER,
  LAST12_MONTHS_NEW_REVENUE_AMOUNT INTEGER,
  LAST12_MONTHS_SUPPORT_CALL_COUNT INTEGER,
  PRIMARY KEY (ID)
);

CREATE TABLE PARTY_ROLE_ENTITY_GROUP.PARTY_ROLE (
  ID VARCHAR(36) UNIQUE NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE PARTY_ROLE_ENTITY_GROUP.SUPPLIER_PARTY_JOIN (
  SUPPLIER_ID  VARCHAR(36) NOT NULL,
  PARTY_ID VARCHAR(36) NOT NULL,
  FOREIGN KEY(SUPPLIER_ID) REFERENCES PARTY_ROLE_ENTITY_GROUP.SUPPLIER(ID),
  FOREIGN KEY(PARTY_ID) REFERENCES PARTY_ENTITY_GROUP.PARTY(ID)
);

CREATE TABLE PARTY_ROLE_ENTITY_GROUP.CUSTOMER_STATUS_HISTORY_PARTY_ROLE_JOIN (
  CUSTOMER_STATUS_HISTORY_ID  VARCHAR(36) NOT NULL,
  PARTY_ROLE_ID VARCHAR(36) NOT NULL,
  FOREIGN KEY(CUSTOMER_STATUS_HISTORY_ID) REFERENCES PARTY_ROLE_ENTITY_GROUP.CUSTOMER_STATUS_HISTORY(ID),
  FOREIGN KEY(PARTY_ROLE_ID) REFERENCES PARTY_ROLE_ENTITY_GROUP.PARTY_ROLE(ID)
);

CREATE TABLE PARTY_ROLE_ENTITY_GROUP.COMPETITOR_PARTY_JOIN (
  COMPETITOR_ID  VARCHAR(36) NOT NULL,
  PARTY_ID VARCHAR(36) NOT NULL,
  FOREIGN KEY(COMPETITOR_ID) REFERENCES PARTY_ROLE_ENTITY_GROUP.COMPETITOR(ID),
  FOREIGN KEY(PARTY_ID) REFERENCES PARTY_ENTITY_GROUP.PARTY(ID)
);

CREATE TABLE PARTY_ROLE_ENTITY_GROUP.SELLER_PARTY_JOIN (
  SELLER_ID  VARCHAR(36) NOT NULL,
  PARTY_ID VARCHAR(36) NOT NULL,
  FOREIGN KEY(SELLER_ID) REFERENCES PARTY_ROLE_ENTITY_GROUP.SELLER(ID),
  FOREIGN KEY(PARTY_ID) REFERENCES PARTY_ENTITY_GROUP.PARTY(ID)
);

CREATE TABLE PARTY_ROLE_ENTITY_GROUP.CUSTOMER_PARTY_JOIN (
  CUSTOMER_ID  VARCHAR(36) NOT NULL,
  PARTY_ID VARCHAR(36) NOT NULL,
  FOREIGN KEY(CUSTOMER_ID) REFERENCES PARTY_ROLE_ENTITY_GROUP.CUSTOMER(ID),
  FOREIGN KEY(PARTY_ID) REFERENCES PARTY_ENTITY_GROUP.PARTY(ID)
);

CREATE TABLE PARTY_ROLE_ENTITY_GROUP.PARTY_ROLE_PARTY_JOIN (
  PARTY_ROLE_ID  VARCHAR(36) NOT NULL,
  PARTY_ID VARCHAR(36) NOT NULL,
  FOREIGN KEY(PARTY_ROLE_ID) REFERENCES PARTY_ROLE_ENTITY_GROUP.PARTY_ROLE(ID),
  FOREIGN KEY(PARTY_ID) REFERENCES PARTY_ENTITY_GROUP.PARTY(ID)
);